# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Use offset parser to group the outputs.  The messages with offsets in range
# 0 to 999 will end up under s3n://bucket/topic/offset=0/, offsets 1000 to 2000
# will go to s3n://bucket/topic/offset=1000
#
# This way of output groups maintains the message order exactly as it is in 
# Kafka queue.  This is different than the timestamp based output grouping
# which might lose the original message ordering when there are message late
# arrivals.

include=secor.prod.properties

# Name of the Kafka consumer group.
secor.kafka.group=secor_backup

# Parser class that extracts partitions from consumed messages.
secor.message.parser.class=com.pinterest.secor.parser.OffsetMessageParser

# S3 path where sequence files are stored.
secor.s3.path=raw_logs/secor_backup

# Swift path where sequence files are stored.
secor.swift.path=

# Local path where sequence files are stored before they are uploaded to s3.
secor.local.path=/mnt/secor_data/message_logs/backup

# Port of the Ostrich server.
ostrich.port=9999

